@{
    ViewData["Title"] = "Manage My Services";
    var predefined = ViewBag.Predefined as IEnumerable<string>;
}
<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">My Services</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#linkModal" onclick="openLink()">
            <i class="fas fa-plus"></i> Add Service
        </button>
    </div>

    <div class="card mb-3">
        <div class="card-header">Linked Services</div>
        <div class="card-body p-0">
            <ul class="list-group list-group-flush" id="linksList">
                <li class="list-group-item text-muted">Loading...</li>
            </ul>
        </div>
    </div>

    <div>
        <a asp-controller="ServiceProvider" asp-action="Dashboard" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>
    </div>
</div>

<!-- Link Modal -->
<div class="modal fade" id="linkModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Service</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Choose Service</label>
                    <select class="form-select" id="serviceSelect" onchange="toggleOther()">
                        <option value="" selected disabled>-- Select --</option>
                        @foreach (var s in predefined!) {
                            <option value="@s">@s</option>
                        }
                        <option value="__other__">Other</option>
                    </select>
                </div>
                <div class="mb-3" id="otherWrap" style="display:none;">
                    <label class="form-label">Enter Service Name</label>
                    <input class="form-control" id="otherName" placeholder="e.g., AC Repair">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveLink()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleOther(){
        const v = document.getElementById('serviceSelect').value;
        document.getElementById('otherWrap').style.display = (v === '__other__') ? '' : 'none';
    }
    function openLink(){
        document.getElementById('serviceSelect').value = '';
        document.getElementById('otherName').value = '';
        toggleOther();
    }

    async function loadLinks(){
        const ul = document.getElementById('linksList');
        ul.innerHTML = '<li class="list-group-item text-muted">Loading...</li>';
        try{
            const res = await fetch('/api/services/mine');
            const links = await res.json();
            if(!links || links.length === 0){
                ul.innerHTML = '<li class="list-group-item text-muted">No services linked yet.</li>';
                return;
            }
            ul.innerHTML = '';
            links.forEach(l => {
                const li = document.createElement('li');
                li.className = 'list-group-item d-flex justify-content-between align-items-center';
                li.innerHTML = `<span>${l.serviceName} ${l.isActive ? '' : '<span class=\'badge bg-secondary ms-2\'>Inactive</span>'}</span>
                    <button class="btn btn-sm btn-outline-danger" onclick="unlink('${l.id}')"><i class="fas fa-unlink"></i> Unlink</button>`;
                ul.appendChild(li);
            });
        }catch{ ul.innerHTML = '<li class="list-group-item text-danger">Failed to load.</li>'; }
    }

    async function saveLink(){
        const sel = document.getElementById('serviceSelect').value;
        const name = sel === '__other__' ? document.getElementById('otherName').value.trim() : sel;
        if(!name){ alert('Please select or enter a service name.'); return; }
        try{
            const res = await fetch('/api/services/link', {
                method: 'POST', headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ serviceName: name })
            });
            if(!res.ok) throw new Error();
            bootstrap.Modal.getInstance(document.getElementById('linkModal'))?.hide();
            await loadLinks();
        }catch{ alert('Failed to add service.'); }
    }

    async function unlink(id){
        if(!confirm('Unlink this service?')) return;
        try{
            const res = await fetch(`/api/services/mine/${id}`, { method: 'DELETE' });
            if(res.status === 204) await loadLinks();
            else alert('Failed to unlink');
        }catch{ alert('Failed to unlink'); }
    }

    document.addEventListener('DOMContentLoaded', loadLinks);
</script>