@model List<ServConnect.Models.Booking>
@{
    ViewData["Title"] = "My Bookings";
}
<div class="container py-4">
    <h2 class="mb-3">My Bookings</h2>

    @if (ViewBag.HasPendingPayments)
    {
        <div class="alert alert-warning">
            <h5><i class="fas fa-exclamation-triangle me-2"></i>Pending Payments</h5>
            <p class="mb-2">You have pending payments that must be completed before booking new services:</p>
            @foreach (var payment in ViewBag.PendingPayments)
            {
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span><strong>@payment.ServiceName</strong> by @payment.ProviderName - ₹@payment.AmountInRupees.ToString("F2")</span>
                    <a href="/booking-payment/pay/@payment.Id" class="btn btn-sm btn-warning">
                        <i class="fas fa-credit-card me-1"></i>Pay Now
                    </a>
                </div>
            }
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info">You have no bookings yet.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>Provider</th>
                        <th>Service</th>
                        <th>Price</th>
                        <th>Date & Time</th>
                        <th>Status</th>
                        <th>Message</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var b in Model)
                    {
                        <tr>
                            <td>@b.ProviderName</td>
                            <td>@b.ServiceName</td>
                            <td>
                                @if (b.Price > 0)
                                {
                                    <span>@b.Currency @b.Price.ToString("F2") @b.PriceUnit</span>
                                }
                                else
                                {
                                    <span class="text-muted">Price on request</span>
                                }
                            </td>
                            <td>@b.ServiceDateTime.ToLocalTime().ToString("f")</td>
                            <td>
                                @switch (b.Status)
                                {
                                    case ServConnect.Models.BookingStatus.Pending:
                                        <span class="badge bg-warning text-dark">Pending</span>
                                        break;
                                    case ServConnect.Models.BookingStatus.Accepted:
                                        <span class="badge bg-success">Accepted</span>
                                        break;
                                    case ServConnect.Models.BookingStatus.Rejected:
                                        <span class="badge bg-danger">Rejected</span>
                                        break;
                                }
                                @if (b.IsCompleted)
                                {
                                    <div><span class="badge bg-secondary mt-1">Completed</span></div>
                                }
                            </td>
                            <td>@(string.IsNullOrWhiteSpace(b.ProviderMessage) ? "—" : b.ProviderMessage)</td>
                            <td>
                                @if (!b.IsCompleted && b.Status == ServConnect.Models.BookingStatus.Accepted)
                                {
                                    <button class="btn btn-sm btn-success" onclick="openCompleteModal('@b.Id')">
                                        <i class="fas fa-check me-1"></i> Mark complete
                                    </button>
                                }
                                else if (b.IsCompleted)
                                {
                                    <div class="small text-muted">
                                        Rating: @(b.UserRating?.ToString() ?? "—")<br/>
                                        @(string.IsNullOrWhiteSpace(b.UserFeedback) ? "" : $"\"{b.UserFeedback}\"")
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<div class="modal fade" id="completeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Complete service</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="completeBookingId" />
                <div class="mb-3">
                    <label class="form-label">Rating</label>
                    <select id="completeRating" class="form-select">
                        <option value="">No rating</option>
                        <option value="1">1 - Poor</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5 - Excellent</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Suggestion / Feedback</label>
                    <textarea id="completeFeedback" class="form-control" rows="3" placeholder="Optional"></textarea>
                </div>
                <div class="alert alert-warning small">Submitting will mark this booking as completed.</div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitCompletion()">Submit</button>
            </div>
        </div>
    </div>
</div>

<script>
    let completeModal;
    document.addEventListener('DOMContentLoaded', () => {
        const el = document.getElementById('completeModal');
        if (window.bootstrap && el) {
            completeModal = new bootstrap.Modal(el);
        }
    });
    function openCompleteModal(id){
        document.getElementById('completeBookingId').value = id;
        if(completeModal) completeModal.show();
    }
    async function submitCompletion(){
        const id = document.getElementById('completeBookingId').value;
        const rating = document.getElementById('completeRating').value || null;
        const feedback = document.getElementById('completeFeedback').value || null;
        const payload = { bookingId: id, rating: rating ? parseInt(rating) : null, feedback };
        try{
            const res = await fetch('/api/bookings/complete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });
            if(!res.ok) throw new Error('Failed');
            
            const result = await res.json();
            
            if (result.requiresPayment) {
                // Create payment and redirect to payment page
                const paymentRes = await fetch('/api/booking-payment/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        bookingId: result.bookingId,
                        amountInRupees: result.amount,
                        rating: result.rating,
                        feedback: result.feedback
                    })
                });
                
                if (paymentRes.ok) {
                    const paymentResult = await paymentRes.json();
                    window.location.href = paymentResult.redirectUrl;
                } else {
                    alert('Failed to create payment. Please try again.');
                }
            } else {
                // Old flow - refresh the page to show updated status
                window.location.reload();
            }
        }catch(e){
            alert('Failed to submit. Please try again.');
        }
    }
</script>