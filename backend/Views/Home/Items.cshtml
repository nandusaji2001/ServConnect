@{
    ViewData["Title"] = "Browse Items";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Browse Services & Products</h2>
        <div class="d-flex gap-2">
            <input id="search" class="form-control" placeholder="Search..." style="min-width: 260px;">
        </div>
    </div>

    <div id="itemsGrid" class="row g-3">
        <div class="col-12 text-center text-muted">Loading...</div>
    </div>
</div>

<script>
    let allItems = [];

    function card(i){
        const img = i.imageUrl ? `<img src="${i.imageUrl}" class="card-img-top" alt="${i.title || 'item'}" style="object-fit:cover;height:160px;">` : '';
        return `
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="card h-100">
                ${img}
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">${i.title || ''}</h5>
                    <p class="card-text flex-grow-1">${i.description || ''}</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="fw-bold">${(i.price ?? 0).toLocaleString(undefined,{style:'currency',currency:'INR'})}</span>
                        <span class="badge ${i.ownerRole === 'Vendor' ? 'bg-warning text-dark' : 'bg-info text-dark'}">${i.ownerRole}</span>
                    </div>
                </div>
            </div>
        </div>`;
    }

    function render(items){
        const grid = document.getElementById('itemsGrid');
        if(!items || items.length === 0){
            grid.innerHTML = `<div class='col-12 text-center text-muted'>No items found.</div>`;
            return;
        }
        grid.innerHTML = items.map(card).join('');
    }

    async function load(){
        const grid = document.getElementById('itemsGrid');
        grid.innerHTML = `<div class='col-12 text-center text-muted'>Loading...</div>`;
        try{
            const res = await fetch('/api/items', { credentials: 'same-origin' });
            if(!res.ok) throw new Error();
            allItems = await res.json();
            render(allItems);
        }catch{
            grid.innerHTML = `<div class='col-12 text-center text-danger'>Failed to load.</div>`;
        }
    }

    document.getElementById('search').addEventListener('input', (e) => {
        const q = e.target.value.toLowerCase();
        const filtered = allItems.filter(x => `${x.title} ${x.description}`.toLowerCase().includes(q));
        render(filtered);
    });

    function applyRoleFilter(items){
        const params = new URLSearchParams(location.search);
        const role = params.get('role');
        if(!role) return items;
        return items.filter(x => String(x.ownerRole).toLowerCase() === role.toLowerCase());
    }

    document.addEventListener('DOMContentLoaded', async () => {
        await load();
        allItems = applyRoleFilter(allItems);
        render(allItems);
    });
</script>