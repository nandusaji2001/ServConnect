@using ServConnect.ViewModels
@using ServConnect.Models
@model RegisterViewModel

@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<style>
/* Replace this whole block with the new CSS I gave you */
html, body {
    margin: 0 !important;
    padding: 0 !important;
    width: 100% !important;
    height: 100% !important;
    overflow: hidden; /* Prevent page scrolling */
}

/* Background container */
.account-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('@Url.Content("~/images/login_register.png")') center/cover no-repeat fixed;
    display: flex;
    justify-content: flex-start; /* align form to left */
    align-items: center;
    padding: 2rem;
}

.account-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: 1;
}

/* Form box */
.account-box {
    background: rgba(240, 253, 244, 0.95);
    padding: 40px;
    border-radius: 20px;
    border: 1px solid rgba(34, 197, 94, 0.2);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 600px;
    margin-left: 5%;
    position: relative;
    z-index: 2;
    backdrop-filter: blur(10px);
    
    /* Scrollable */
    max-height: 90vh; /* prevent it from overflowing viewport */
    overflow-y: auto;
}

/* Optional: nice scrollbar */
.account-box::-webkit-scrollbar {
    width: 8px;
}
.account-box::-webkit-scrollbar-thumb {
    background-color: rgba(16, 185, 129, 0.5);
    border-radius: 4px;
}
</style>

<div class="account-container">
    <div class="account-box">
            <h2 class="text-center mb-4">Create Account</h2>

            <form asp-action="Register" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <!-- Name -->
                <div class="mb-3">
                    <label asp-for="Name" class="form-label">Full Name</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <!-- Email -->
                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <!-- Profile Image removed; will be completed in profile completion step -->

                <!-- Password -->
                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <!-- Confirm Password -->
                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <!-- Role Selection -->
                <div class="mb-3">
                    <label asp-for="Role" class="form-label">Account Type</label>
                    <select asp-for="Role" class="form-control">
                        <option value="@RoleTypes.User">Regular User</option>
                        <option value="@RoleTypes.ServiceProvider">Service Provider</option>
                        <option value="@RoleTypes.Vendor">Vendor (Product Seller)</option>
                    </select>
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>

                <input type="submit" value="Register" class="btn btn-success w-100 p-2" />
                <div class="text-center my-3 text-muted">or</div>
                <button type="button" id="googleRegisterBtn" class="btn btn-outline-dark w-100 p-2">
                    <i class="bi bi-google"></i> Continue with Google
                </button>
            </form>

            <p class="text-center mt-2">
                Already have an account?
                <a asp-controller="Account" asp-action="Login" class="text-decoration-none">Login</a>
            </p>
            <div class="text-center">
                <a asp-controller="Home" asp-action="Index" class="text-decoration-none mt-3">Back to Home</a>
            </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial.cshtml")
    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-auth.js"></script>
    <script src="~/js/firebase-auth.js" asp-append-version="true"></script>
    <script src="~/js/validation-live.js" asp-append-version="true"></script>
    <script>
        (function() {
            const googleBtn = document.getElementById('googleRegisterBtn');
            if (!googleBtn) return;

            googleBtn.addEventListener('click', async function () {
                googleBtn.disabled = true;
                googleBtn.innerText = 'Please wait...';
                try {
                    const googleResult = await window.FirebaseAuth.signInWithGoogle();
                    if (!googleResult.success) {
                        alert(googleResult.error || 'Google sign-in failed');
                        return;
                    }

                    const idToken = googleResult.idToken;
                    const serverLogin = await window.FirebaseAuth.loginWithServer(idToken);

                    if (serverLogin.success) {
                        window.location.href = serverLogin.redirectUrl || '/';
                        return;
                    }

                    // If account doesn't exist, complete registration via server
                    if (serverLogin.requiresRegistration) {
                        const nameInput = document.querySelector('input[name="Name"]');
                        const emailInput = document.querySelector('input[name="Email"]');
                        const roleSelect = document.querySelector('select[name="Role"]');

                        // Prefill fields for UX (optional)
                        if (serverLogin.name && nameInput) nameInput.value = serverLogin.name;
                        if (serverLogin.email && emailInput) emailInput.value = serverLogin.email;

                        const registerResult = await window.FirebaseAuth.registerWithServer(idToken, {
                            name: nameInput ? nameInput.value : (serverLogin.name || ''),
                            email: emailInput ? emailInput.value : (serverLogin.email || ''),
                            phoneNumber: null,
                            address: null,
                            role: roleSelect ? roleSelect.value : '@ServConnect.Models.RoleTypes.User',
                            returnUrl: null,
                            photoUrl: googleResult.user?.photoURL || null
                        });

                        if (registerResult.success) {
                            window.location.href = registerResult.redirectUrl || '/';
                        } else {
                            alert(registerResult.message || 'Registration failed.');
                        }
                        return;
                    }

                    alert(serverLogin.message || 'Login failed.');
                } catch (e) {
                    console.error(e);
                    alert('Something went wrong. Please try again.');
                } finally {
                    googleBtn.disabled = false;
                    googleBtn.innerText = 'Continue with Google';
                }
            });
        })();
    </script>
}
