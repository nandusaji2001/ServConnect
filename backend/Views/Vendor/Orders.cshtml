@{
    ViewData["Title"] = "Vendor Orders";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Orders For My Items</h2>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped align-middle">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Item</th>
                            <th>Qty</th>
                            <th>Total</th>
                            <th>User</th>
                            <th>Payment</th>
                            <th>Status</th>
                            <th>Placed</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="tbody">
                        <tr><td colspan="9" class="text-center text-muted">Loading...</td></tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
function fmtAmount(a){
  return (a ?? 0).toLocaleString(undefined,{style:'currency',currency:'INR'});
}

function row(o){
  const created = o.createdAtUtc ? new Date(o.createdAtUtc).toLocaleString() : '';
  const payBadge = o.paymentStatus === 1 ? 'bg-success' : (o.paymentStatus === 0 ? 'bg-warning text-dark' : 'bg-danger');
  const statusBadge = {
    0: 'bg-warning text-dark',
    1: 'bg-info text-dark',
    2: 'bg-success',
    3: 'bg-secondary'
  }[o.status] || 'bg-secondary';

  const shipDisabled = !(o.paymentStatus === 1 && o.status === 0);
  const cancelDisabled = o.status !== 0;

  return `<tr data-id="${o.id}">
    <td><code>${o.id}</code></td>
    <td>${o.itemTitle}</td>
    <td>${o.quantity}</td>
    <td>${fmtAmount(o.totalAmount)}</td>
    <td>${o.userEmail || ''}</td>
    <td><span class="badge ${payBadge}">${['Created','Paid','Failed','Refunded'][o.paymentStatus] || ''}</span></td>
    <td><span class="badge ${statusBadge}">${['Pending','Shipped','Delivered','Cancelled'][o.status] || ''}</span></td>
    <td>${created}</td>
    <td class="d-flex gap-2">
      <button class="btn btn-sm btn-primary ship-btn" ${shipDisabled ? 'disabled' : ''}>Mark Shipped</button>
      <button class="btn btn-sm btn-outline-secondary track-btn">Set Tracking</button>
      <button class="btn btn-sm btn-outline-danger cancel-btn" ${cancelDisabled ? 'disabled' : ''}>Cancel</button>
    </td>
  </tr>`;
}

async function load(){
  const tbody = document.getElementById('tbody');
  tbody.innerHTML = `<tr><td colspan="9" class="text-center text-muted">Loading...</td></tr>`;
  try {
    const res = await fetch('/api/orders/vendor', { credentials: 'same-origin' });
    if(!res.ok) throw new Error('Failed');
    const list = await res.json();
    if(!list || list.length === 0){
      tbody.innerHTML = `<tr><td colspan="9" class="text-center text-muted">No orders yet.</td></tr>`;
      return;
    }
    tbody.innerHTML = list.map(row).join('');
    wire();
  } catch {
    tbody.innerHTML = `<tr><td colspan="9" class="text-center text-danger">Failed to load orders.</td></tr>`;
  }
}

function wire(){
  document.querySelectorAll('.ship-btn').forEach(b => b.addEventListener('click', async (e) => {
    const tr = e.target.closest('tr');
    const id = tr.getAttribute('data-id');
    const trackingUrl = prompt('Optional: enter tracking URL (leave blank to skip)');
    if(!confirm('Mark this order as shipped?')) return;
    const res = await fetch('/api/orders/ship', {
      method: 'POST', headers: {'Content-Type':'application/json'}, credentials: 'same-origin',
      body: JSON.stringify({ orderId: id, trackingUrl: trackingUrl || null })
    });
    if(res.ok){ await load(); } else { alert('Failed to update'); }
  }));
  document.querySelectorAll('.track-btn').forEach(b => b.addEventListener('click', async (e) => {
    const tr = e.target.closest('tr');
    const id = tr.getAttribute('data-id');
    const trackingUrl = prompt('Enter tracking URL');
    if(!trackingUrl) return;
    const res = await fetch('/api/orders/set-tracking', {
      method: 'POST', headers: {'Content-Type':'application/json'}, credentials: 'same-origin',
      body: JSON.stringify({ orderId: id, trackingUrl })
    });
    if(res.ok){ await load(); } else { alert('Failed to set tracking'); }
  }));
  document.querySelectorAll('.cancel-btn').forEach(b => b.addEventListener('click', async (e) => {
    const tr = e.target.closest('tr');
    const id = tr.getAttribute('data-id');
    if(!confirm('Cancel this order?')) return;
    const res = await fetch('/api/orders/cancel', {
      method: 'POST', headers: {'Content-Type':'application/json'}, credentials: 'same-origin',
      body: JSON.stringify({ orderId: id })
    });
    if(res.ok){ await load(); } else { alert('Failed to cancel'); }
  }));
}

document.addEventListener('DOMContentLoaded', load);
</script>